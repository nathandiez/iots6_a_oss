{{- if .Values.iotService.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: iot-service
  namespace: {{ .Values.global.namespace }}
  labels:
    app: iot-service
    chart: {{ include "iot-stack-chart.chart" . }}
    release: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: iot-service
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: iot-service
        release: {{ .Release.Name }}
    spec:
      containers:
      - name: iot-service
        image: "{{ .Values.iotService.image.repository }}:{{ .Values.iotService.image.tag }}"
        imagePullPolicy: {{ .Values.iotService.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.iotService.service.port }}
        env:
        - name: LOG_LEVEL
          value: {{ .Values.iotService.env.LOG_LEVEL }}
        - name: MQTT_BROKER
          value: {{ .Values.iotService.env.MQTT_BROKER }}
        - name: DB_HOST
          value: {{ .Values.iotService.env.DB_HOST }}
        envFrom:
        - secretRef:
            name: iot-secrets
        resources:
          {{- toYaml .Values.iotService.resources | nindent 10 }}

---
apiVersion: v1
kind: Service
metadata:
  name: iot-service
  namespace: {{ .Values.global.namespace }}
  labels:
    app: iot-service
    chart: {{ include "iot-stack-chart.chart" . }}
    release: {{ .Release.Name }}
spec:
  type: {{ .Values.iotService.service.type }}
  ports:
  - port: {{ .Values.iotService.service.port }}
    targetPort: {{ .Values.iotService.service.port }}
    protocol: TCP
    name: http
  selector:
    app: iot-service
    release: {{ .Release.Name }}
{{- end }}